{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","api/imageApi.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","ImageGalleryItem","modalContent","openModal","image","onImageClick","e","target","dataset","url","alt","map","tags","id","webformatURL","largeImageURL","className","s","src","ImageGalleryItemImage","onClick","Button","children","allyProps","button","defaultProps","imageApi","this","searchQuery","page","fetch","then","response","json","hits","incrementPage","newQuery","ImageGallery","state","error","status","loading","scrollTo","document","documentElement","scrollHeight","fetchImagesApi","setState","prevState","window","top","behavior","finally","prevProps","prevSearch","searchValue","nextSearch","props","query","length","toast","catch","heading","style","textAlign","type","imageGallery","marginTop","marginBottom","Component","Searchbar","onSubmit","useState","setSearchValue","searchbar","searchForm","preventDefault","trim","searchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","modalRoot","querySelector","Modal","onClose","useEffect","handleKeyDown","code","addEventListener","removeEventListener","createPortal","Overlay","App","showModal","setShowModal","modalUrl","setModalUrl","modalAlt","setModalAlt","toggleModal","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3ee8eb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3vH7u\",\"heading\":\"ImageGallery_heading__HqHkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__4Z8m-\",\"searchForm\":\"Searchbar_searchForm__3GoZA\",\"searchFormInput\":\"Searchbar_searchFormInput__1zom2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__25QUl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1BsKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2_8y2\",\"Modal\":\"Modal_Modal__1tTCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2HQ70\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ modalContent, openModal, image }) => {\r\n  const onImageClick = e => {\r\n    modalContent(e.target.dataset.url, e.target.alt);\r\n    openModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {image.map(({ tags, id, webformatURL, largeImageURL }) => {\r\n        return (\r\n          <li key={id} className={s.ImageGalleryItem}>\r\n            <img\r\n              src={webformatURL}\r\n              alt={tags}\r\n              className={s.ImageGalleryItemImage}\r\n              data-url={largeImageURL}\r\n              onClick={onImageClick}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  openModal: PropTypes.func,\r\n  modalContent: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button className={s.button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\n\r\nimport ImageApi from '../../api/imageApi';\r\n\r\nconst imageApi = new ImageApi();\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    image: null,\r\n    error: null,\r\n    status: 'idle',\r\n    loading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevSearch = prevProps.searchValue;\r\n    const nextSearch = this.props.searchValue;\r\n\r\n    if (prevSearch !== nextSearch) {\r\n      this.setState({ status: 'pending', loading: true });\r\n\r\n      imageApi.query = this.props.searchValue;\r\n      imageApi\r\n        .fetchImagesApi(nextSearch)\r\n        .then(image => {\r\n          if (image.length === 0) {\r\n            toast(`Sorry, there is no image of ${this.props.searchValue}!`);\r\n\r\n            this.setState({ image, status: 'rejected' });\r\n            return;\r\n          } else this.setState({ image, status: 'resolved' });\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error, status: 'rejected' });\r\n        });\r\n    }\r\n  }\r\n\r\n  onClick = () => {\r\n    const scrollTo = document.documentElement.scrollHeight - 141;\r\n    imageApi\r\n      .fetchImagesApi()\r\n      .then(image => {\r\n        this.setState(prevState => ({\r\n          loading: !prevState.loading,\r\n          image: [...prevState.image, ...image],\r\n        }));\r\n        window.scrollTo({\r\n          top: scrollTo,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .finally(\r\n        this.setState(prevState => ({\r\n          loading: !prevState.loading,\r\n        })),\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { image, status, loading } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return (\r\n        <h2 className={s.heading}>\r\n          Type what kind of image you're looking for in the search bar.\r\n        </h2>\r\n      );\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return (\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Loader type=\"Bars\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <h2 className={s.heading}>Try again.</h2>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={s.imageGallery}>\r\n            <ImageGalleryItem\r\n              image={image}\r\n              openModal={this.props.openModal}\r\n              modalContent={this.props.modalContent}\r\n            />\r\n          </ul>\r\n          {loading ? (\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                marginTop: '20px',\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              <Button type=\"button\" onClick={this.onClick}>\r\n                Load more\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <Loader type=\"Bars\" />\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onClick: PropTypes.func,\r\n  searchValue: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func,\r\n  modalContent: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","const API_KEY = '22049228-dddf73462342363350e266d0d';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default class imageApi {\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n  }\r\n\r\n  fetchImagesApi() {\r\n    return fetch(\r\n      `${BASE_URL}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=12&key=${API_KEY}`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(({ hits }) => {\r\n        this.incrementPage();\r\n\r\n        return hits;\r\n      });\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const onChange = e => {\r\n    setSearchValue(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const onInputSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchValue.trim() === '') {\r\n      setSearchValue('');\r\n      toast('Please type something to find image you want');\r\n      return;\r\n    }\r\n    onSubmit(searchValue);\r\n    setSearchValue('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <form className={s.searchForm} onSubmit={onInputSubmit}>\r\n        <input\r\n          className={s.searchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchValue}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\">Search</Button>\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default Searchbar;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from './components/Modal/Modal';\n\nconst App = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalUrl, setModalUrl] = useState('');\n  const [modalAlt, setModalAlt] = useState('');\n\n  //const onSubmit = searchValue => {\n  // this.setState({ searchValue });\n  //};\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const modalContent = (url, alt) => {\n    setModalUrl(url);\n    setModalAlt(alt);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={setSearchValue} />\n\n      <ImageGallery\n        searchValue={searchValue}\n        openModal={toggleModal}\n        modalContent={modalContent}\n      />\n\n      {showModal && (\n        <Modal onClose={toggleModal} modalContent={modalContent}>\n          <img src={modalUrl} alt={modalAlt} />\n        </Modal>\n      )}\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}